#pip install SpeechRecognition

#pip install pyaudio

#pip install pyttsx3



import speech_recognition as sr
import pyttsx3
import datetime
import os
import smtplib
import requests
import json

# Initialize the speech recognition and text-to-speech engines
recognizer = sr.Recognizer()
engine = pyttsx3.init()

def speak(text):
    engine.say(text)
    engine.runAndWait()

def listen():
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source, duration=1)
        audio = recognizer.listen(source)
        try:
            command = recognizer.recognize_google(audio).lower()
            print("You said:", command)
            return command
        except sr.UnknownValueError:
            print("Could not understand audio.")
            return ""
        except sr.RequestError as e:
            print(f"Could not request results from Google Speech Recognition service; {e}")
            return ""

def send_email(subject, body, to_email):
    # Code to send an email using smtplib
    pass

def get_weather():
    # Code to fetch weather data from a weather API
    pass

def perform_task(command):
    if "send email" in command:
        speak("Whom do you want to send the email to?")
        to_email = listen()
        speak("What should be the subject of the email?")
        subject = listen()
        speak("What should be the body of the email?")
        body = listen()
        send_email(subject, body, to_email)
        speak("Email sent successfully.")

    elif "weather" in command:
        weather_data = get_weather()
        speak(f"The weather is {weather_data['description']} with a temperature of {weather_data['temperature']} degrees Celsius.")

    # Add more tasks and integrations with APIs as needed

def main():
    speak("Hello! How can I assist you today?")
    while True:
        command = listen()
        if "exit" in command:
            speak("Goodbye!")
            break

        try:
            perform_task(command)
        except Exception as e:
            print(f"An error occurred: {e}")
            speak("Sorry, I couldn't perform the requested task. Please try again.")

if __name__ == "__main__":
    main()


